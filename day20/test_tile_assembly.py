import pytest

from helpers import get_data
from tile_handling import Tile, parse_input
from tile_assembly import build_tile_fit_graph, arrange_all_tiles

tile1 = ("Tile 1951:\n"
         "#.##...##.\n"
         "#.####...#\n"
         ".....#..##\n"
         "#...######\n"
         ".##.#....#\n"
         ".###.#####\n"
         "###.##.##.\n"
         ".###....#.\n"
         "..#.#..#.#\n"
         "#...##.#..")
tile2 = ("Tile 2311:\n"
         "..##.#..#.\n"
         "##..#.....\n"
         "#...##..#.\n"
         "####.#...#\n"
         "##.##.###.\n"
         "##...#.###\n"
         ".#.#.#..##\n"
         "..#....#..\n"
         "###...#.#.\n"
         "..###..###")

tile1 = Tile.from_str(tile1)
tile2 = Tile.from_str(tile2)


@pytest.fixture
def example_input():
    input_str = ("Tile 2311:\n"
                 "..##.#..#.\n"
                 "##..#.....\n"
                 "#...##..#.\n"
                 "####.#...#\n"
                 "##.##.###.\n"
                 "##...#.###\n"
                 ".#.#.#..##\n"
                 "..#....#..\n"
                 "###...#.#.\n"
                 "..###..###\n"
                 "\n"
                 "Tile 1951:\n"
                 "#.##...##.\n"
                 "#.####...#\n"
                 ".....#..##\n"
                 "#...######\n"
                 ".##.#....#\n"
                 ".###.#####\n"
                 "###.##.##.\n"
                 ".###....#.\n"
                 "..#.#..#.#\n"
                 "#...##.#..\n"
                 "\n"
                 "Tile 1171:\n"
                 "####...##.\n"
                 "#..##.#..#\n"
                 "##.#..#.#.\n"
                 ".###.####.\n"
                 "..###.####\n"
                 ".##....##.\n"
                 ".#...####.\n"
                 "#.##.####.\n"
                 "####..#...\n"
                 ".....##...\n"
                 "\n"
                 "Tile 1427:\n"
                 "###.##.#..\n"
                 ".#..#.##..\n"
                 ".#.##.#..#\n"
                 "#.#.#.##.#\n"
                 "....#...##\n"
                 "...##..##.\n"
                 "...#.#####\n"
                 ".#.####.#.\n"
                 "..#..###.#\n"
                 "..##.#..#.\n"
                 "\n"
                 "Tile 1489:\n"
                 "##.#.#....\n"
                 "..##...#..\n"
                 ".##..##...\n"
                 "..#...#...\n"
                 "#####...#.\n"
                 "#..#.#.#.#\n"
                 "...#.#.#..\n"
                 "##.#...##.\n"
                 "..##.##.##\n"
                 "###.##.#..\n"
                 "\n"
                 "Tile 2473:\n"
                 "#....####.\n"
                 "#..#.##...\n"
                 "#.##..#...\n"
                 "######.#.#\n"
                 ".#...#.#.#\n"
                 ".#########\n"
                 ".###.#..#.\n"
                 "########.#\n"
                 "##...##.#.\n"
                 "..###.#.#.\n"
                 "\n"
                 "Tile 2971:\n"
                 "..#.#....#\n"
                 "#...###...\n"
                 "#.#.###...\n"
                 "##.##..#..\n"
                 ".#####..##\n"
                 ".#..####.#\n"
                 "#..#.#..#.\n"
                 "..####.###\n"
                 "..#.#.###.\n"
                 "...#.#.#.#\n"
                 "\n"
                 "Tile 2729:\n"
                 "...#.#.#.#\n"
                 "####.#....\n"
                 "..#.#.....\n"
                 "....#..#.#\n"
                 ".##..##.#.\n"
                 ".#.####...\n"
                 "####.#.#..\n"
                 "##.####...\n"
                 "##..#.##..\n"
                 "#.##...##.\n"
                 "\n"
                 "Tile 3079:\n"
                 "#.#.#####.\n"
                 ".#..######\n"
                 "..#.......\n"
                 "######....\n"
                 "####.#..#.\n"
                 ".#...#.##.\n"
                 "#.#####.##\n"
                 "..#.###...\n"
                 "..#.......\n"
                 "..#.###...")
    return parse_input(input_str)


def test_graph_simple():
    graph = build_tile_fit_graph([tile1, tile2])

    assert len(list(graph.edges())) == 1
    assert graph.has_edge((tile1, 1), (tile2, 3))


def test_puzzle(example_input):
    arrange_all_tiles(example_input)


def test_arrange_on_my_input():
    arrange_all_tiles(parse_input(get_data(day=20)))
